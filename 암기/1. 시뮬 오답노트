

SWEA 줄기 세포 배양

1. 새로 탄생한 애들은 한 턴이 끝난 후 그 다음 턴 시작할 때 넣어줘야 한다
2. dy, dx 더해주는 것 까먹음
3. new_inact에 있는 아가들은 어차피 aging안되므로 나이는 0으로 시작하면 됨
4. 그 자리에 존재하는 세포가
  동시에 번식하려는 세포로부터 나온건지
  원래 존재했지만 활성화를 기다리고있었던 세포였던건지
  => 그냥 정렬해서 생명력이 높은 애가 먼저 번식하게 하면 된다
  => 즉, map[ny][nx]가 0일 때만 따지면 된다


================================================================================

  SWEA 핀볼게임
  1. run(0, 0, 1, 0, 0, 0)을 가정했을 때,
   맨 처음에 호출했을 때 (y, x)와 (sy, sx)가 같아서
   호출되자마자 종료되어버렸다
   => 해당 방향의 다음 칸을 (y, x)로 설정해서 해결
   => 다른 방법으로는 호출횟수를 기록해서 해주는 방법이 있다(그닥 좋은 방법은 아니라고)

   2. 웜홀
    웜홀에 걸렸을 때, 그 다음 웜홀로 이동하는 재귀를 호출하면
    웜홀 if

  3. 초기화
  한 테스트 케이스가 끝나고
  웜홀을 초기화해 주지 않아서 3번 테케까지밖에 정답이 나오지 않았다

===============================================================================

백준 드래곤 커브

1. 시작점 다음 좌표까지 표시해줘야 하는데 안 해줌
2. dragon_curve()를 돈 후 y좌표와 x좌표가 바뀌지 않는다
	=> 전역변수로 선언해줘서 해결

============================================================

백준 구슬 탈출 2
1. 앞 칸에 다른 구슬이 있는지 확인할 때
	if ((!(ny == ry && nx == rx))) 로 했어야 했는데 y나 x좌표 하나씩만 비교해서 오류
  즉, if(nx!=rx) 이런 식으로 해버렸다.
  ############
  #     ###B##
  ####    R  #
  ############
  이 경우처럼 다른 행에 구슬이 있어도 앞으로 갈 수 없게 되어버린다

2. 구멍에 둘 다 빠지는 경우, 빨간구슬이 먼저 빠지면 바로 리턴되기 때문에
  그 후에 파란 구슬이 빠지는 경우를 고려하지 못 했다.
  리턴을 하지말고, 파란 구슬의 시뮬레이션이 끝난 후에 빨간 구슬이 구멍에 빠졌는지 확인해줘야 한다!
  파란 구슬 시뮬레이션에서 구멍에 빠지면 먼저 리턴되므로.

  ================================================================

  백준 테르토미노

1. (0,0)부터 시작하는데 도형이 0,0기준이 아니라 마구잡이로 되어 있어서 모든 경우의 수를 커버하지 못 했다
    예를 들어
    0 0 0 1
    0 0 0 1
    0 0 0 1
    0 0 0 1
    이렇게 되어 있는 경우, 격자판의 첫 번째 열 부분은 커버할 수 없다

    1 0 0 0
    1 0 0 0
    1 0 0 0
    1 0 0 0
    같은 도형을 이렇게 해야 격자판의 첫 열 부터 커버할 수 있다

2. 테르토미노를 확인할 때, 0부터 4까지의 인덱스를 줬어야 했는데
  격자판 상의 인덱스인 y, x로 따져서 쓰레기 값을 참조했다. (i, j로 줘야 맞다!!!)
